.TH "Core Features" 3 "Wed Feb 27 2013" "Version Patchlevel 21" "CFLIB - Flexible Configuration Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Core Features \- 
.PP
Basic CFLIB Setup\&.  

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBCONFIG\fP"
.br
.RI "\fICFLIB Configuration Database Entry\&. \fP"
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBPatchlevel\fP   '21'"
.br
.RI "\fICFLIB Identification\&. \fP"
.ti -1c
.RI "#define \fBMAXCONF\fP   4096"
.br
.RI "\fIMaximum number of entries in configuration database\&. \fP"
.ti -1c
.RI "#define \fBCF_MAXERRSTR\fP   512"
.br
.RI "\fIMaximum string length for error message\&. \fP"
.ti -1c
.RI "#define \fBCF_MAXLINE\fP   20480"
.br
.RI "\fIMaximum string length for setfile and form parsing\&. \fP"
.ti -1c
.RI "#define \fBCF_MAXQLINE\fP   512"
.br
.RI "\fIMaximum string length for query\&. \fP"
.ti -1c
.RI "#define \fBCF_MAXUSAGE\fP   1024"
.br
.RI "\fIMaximum string length for usage string\&. \fP"
.ti -1c
.RI "#define \fBCF_USG_DEFCOLS\fP   80"
.br
.RI "\fIDefault terminal width for usage string\&. \fP"
.ti -1c
.RI "#define \fBCF_MAXTIMEBUF\fP   256"
.br
.RI "\fIBuffer size for time and day\&. \fP"
.ti -1c
.RI "#define \fBFALSE\fP   0"
.br
.RI "\fI< TRUE, if not defined \fP"
.ti -1c
.RI "#define \fBNULL\fP   (void *)(0L)"
.br
.RI "\fINULL, if not defined\&. \fP"
.ti -1c
.RI "#define \fBCF_FLAG_ON\fP   '\\1'"
.br
.RI "\fIFlag is set\&. \fP"
.ti -1c
.RI "#define \fBCF_FLAG_OFF\fP   ''"
.br
.RI "\fIFlag is not set\&. \fP"
.ti -1c
.RI "#define \fBCF_NO_OPTION\fP   ' '"
.br
.RI "\fIOption is not set\&. \fP"
.ti -1c
.RI "#define \fBTABLEN\fP   8"
.br
.RI "\fITAB length\&. \fP"
.ti -1c
.RI "#define \fBCFP_PUT\fP   0"
.br
.RI "\fIFunction Call or Automatic Initialization\&. \fP"
.ti -1c
.RI "#define \fBCFP_ARG\fP   1"
.br
.RI "\fICommandline\&. \fP"
.ti -1c
.RI "#define \fBCFP_ENV\fP   2"
.br
.RI "\fIEnvironment\&. \fP"
.ti -1c
.RI "#define \fBCFP_PRIV\fP   3"
.br
.RI "\fIPrivate Configuration File\&. \fP"
.ti -1c
.RI "#define \fBCFP_SYS\fP   4"
.br
.RI "\fISystem Configuration File\&. \fP"
.ti -1c
.RI "#define \fBCFP_DEF\fP   5"
.br
.RI "\fIBuilt-in Default\&. \fP"
.ti -1c
.RI "#define \fBCFP_QRY\fP   6"
.br
.RI "\fIStandard Input Channel\&. \fP"
.ti -1c
.RI "#define \fBCFP_RESERVED\fP   7"
.br
.RI "\fIReserved for Subprojects\&. \fP"
.ti -1c
.RI "#define \fBCFS_NOT\fP   0"
.br
.RI "\fIError Response Modes for \fBcfstart()\fP \fP"
.ti -1c
.RI "#define \fBCFS_ALL\fP   1"
.br
.RI "\fIStart Mode: All error messages\&. \fP"
.ti -1c
.RI "#define \fBCFS_NEG\fP   2"
.br
.RI "\fIStart Mode: Only severe errors\&. \fP"
.ti -1c
.RI "#define \fBCFS_USG\fP   3"
.br
.RI "\fIStart Mode: Usage message if error was negative, error output like \fBCFS_NEG\fP\&. \fP"
.ti -1c
.RI "#define \fBCFS_DEBUG\fP   4"
.br
.RI "\fIStart Mode: Output like \fBCFS_USG\fP plus raw dump of configuration\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBcfinit\fP (\fBCONFIG\fP *set, int argc, char **argv)"
.br
.RI "\fI\fBcfinit()\fP Initialize Configuration Database \fP"
.ti -1c
.RI "void \fBcfexit\fP (void)"
.br
.RI "\fI\fBcfexit()\fP Free allocated memory and reset configuration database and error stack \fP"
.ti -1c
.RI "int \fBcfstart\fP (\fBCONFIG\fP *set, int ac, char **av, char *help, int mode)"
.br
.RI "\fI\fBcfstart()\fP Start Configuration Database (with error reporting and usage message) \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "\fBCONFIG\fP * \fB_conf\fP [\fBMAXCONF\fP+1]"
.br
.RI "\fILibrary Internal: CFLIB Configuration Database with at most \fBMAXCONF\fP parameters\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Basic CFLIB Setup\&. 

.IP "\(bu" 2
General Defines
.IP "\(bu" 2
Parsing Levels
.IP "\(bu" 2
Configuration Entries (aka Parameters)
.IP "\(bu" 2
Configuration Database: Array of Configuration Entries
.IP "\(bu" 2
Initialization of the Configuration Database
.IP "\(bu" 2
Resetting the Configuration Database 
.PP

.SH "Define Documentation"
.PP 
.SS "#define \fBFALSE\fP   0"

.PP
< TRUE, if not defined FALSE, if not defined 
.SS "#define \fBCFS_NOT\fP   0"

.PP
Error Response Modes for \fBcfstart()\fP Start Mode: No action on error 
.SH "Function Documentation"
.PP 
.SS "int \fBcfinit\fP (\fBCONFIG\fP *set, intac, char **av)"

.PP
\fBcfinit()\fP Initialize Configuration Database Initialize CFLIB Configuration Database and parse possible sources for database entries according to the settings in \fIset\fP\&.
.PP
\fBParameters:\fP
.RS 4
\fIset\fP \fBConfiguration Initializer\fP : Pointer to Array of \fBCONFIG\fP items containing parameter name, default value, \fBCommandline Option for Parameter\fP and \fBSpecial Options Mask\fP
.br
\fIac\fP Argument Count from commandline or compatible
.br
\fIav\fP Argument String array from commandline or compatible structure
.RE
.PP
\fBReturns:\fP
.RS 4
.PD 0
.IP "\(bu" 2
\fC0\fP : configuration database initialized successfully 
.IP "\(bu" 2
\fC>0\fP : Count of non fatal errors 
.IP "\(bu" 2
\fC<0\fP : Fatal error(s) occurred:
.IP "  \(bu" 4
\fBCFE_MCF\fP : Memory allocation for Configuration Failed\&. 
.IP "  \(bu" 4
\fBCFE_MEF\fP : Memory allocation in Error routine Failed\&. 
.IP "  \(bu" 4
any other absolute value is total error count
.PP

.PP
.RE
.PP
\fBSee also:\fP
.RS 4
\fBConfiguration Parsing Levels and Source/Origin Options\fP 
.RE
.PP

.SS "void \fBcfexit\fP (void)"

.PP
\fBcfexit()\fP Free allocated memory and reset configuration database and error stack Free allocated memory and reset the configuration database and error stack\&.
.PP
This function should be used before a repeated call to \fBcfinit()\fP or \fBcfstart()\fP\&. Furthermore, it may be desired to call \fBcfexit()\fP when the configuration database occupies a lot of memory and is no longer needed\&. 
.SS "int \fBcfstart\fP (\fBCONFIG\fP *setting, intac, char **av, char *help, intmode)"

.PP
\fBcfstart()\fP Start Configuration Database (with error reporting and usage message) Setup Configuration Database\&.
.PP
Check errors and output usage message, if required
.PP
\fBParameters:\fP
.RS 4
\fIsetting\fP pointer to initializer
.br
\fIac\fP argument count from commandline or compatible
.br
\fIav\fP argument string array from comandline or compatible
.br
\fIhelp\fP Help/Usage String
.IP "\(bu" 2
Name of a \fBFLAG Parameter Type\fP entry to cause a usage message, if flag is set
.IP "\(bu" 2
Omit, if \fCNULL\fP 
.PP
.br
\fImode\fP How to handle \fBcfinit()\fP return: 
.PD 0

.IP "\(bu" 2
\fBCFS_NOT\fP - Error Response Modes for \fBcfstart()\fP  
.IP "\(bu" 2
\fBCFS_ALL\fP - Start Mode: All error messages\&.  
.IP "\(bu" 2
\fBCFS_NEG\fP - Start Mode: Only severe errors\&.  
.IP "\(bu" 2
\fBCFS_USG\fP - Start Mode: Usage message if error was negative, error output like \fBCFS_NEG\fP\&.  
.IP "\(bu" 2
\fBCFS_DEBUG\fP - Start Mode: Output like \fBCFS_USG\fP plus raw dump of configuration\&. 
.PP
.RE
.PP
\fBReturns:\fP
.RS 4
.PD 0
.IP "\(bu" 2
\fC0\fP : configuration database has been initialized successfully, no help or usage message required, no fatal errors 
.IP "\(bu" 2
\fC1\fP : no fatal errors occurred, usage message displayed 
.IP "\(bu" 2
\fC-1\fP : fatal error(s) occurred 
.PP
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for CFLIB - Flexible Configuration Library from the source code\&.
